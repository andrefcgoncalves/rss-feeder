import {Timestamp} from "firebase-admin/firestore";

/**
 * Represents a feed item in the Firestore collection
 */
export interface FeedItem {
  /** Auto-generated Firestore Document ID (Used as the RSS item guid) */
  id: string;
  /** The original URL that was passed to the endpoint */
  url: string;
  /** The human-readable title generated by the Gemini API */
  title: string;
  /** The concise summary generated by the Gemini API */
  description: string;
  /** The time the URL was added (used for sorting the feed) */
  pubDate: Timestamp;
}

/**
 * Input data for creating a new feed item (without generated fields)
 */
export interface FeedItemInput {
  url: string;
  title: string;
  description: string;
}

/**
 * Response structure from Gemini API
 */
export interface GeminiParseResponse {
  title: string;
  description: string;
}

/**
 * Request body for the ingestion endpoint
 */
export interface IngestionRequest {
  url: string;
  token?: string;
}

/**
 * Response from the ingestion endpoint
 */
export interface IngestionResponse {
  success: boolean;
  message: string;
  feedUrl?: string;
  itemId?: string;
}

/**
 * Newsletter item stored in Firestore
 */
export interface NewsletterItem {
  /** Auto-generated Firestore Document ID */
  id: string;
  /** Newsletter title extracted from email */
  title: string;
  /** Newsletter content (HTML) */
  content: string;
  /** Newsletter sender/from email */
  from: string;
  /** Date the newsletter was received */
  pubDate: Timestamp;
  /** Newsletter Name */
  newsletterName: string;
}

/**
 * Parseur webhook request body
 */
export interface ParseurWebhookRequest {
  /** Newsletter title */
  title: string;
  /** Newsletter HTML content */
  html: string;
  /** Newsletter text content */
  text: string;
  /** Sender email */
  from: string;
  /** Email subject */
  subject: string;
  /** Additional Parseur metadata */
  [key: string]: any;
}
